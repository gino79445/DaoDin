import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import Image from "next/image";
import Topbar from "@/components/Topbar";
import Group from "@/components/Group";
import styles from "../styles/font.module.scss";
import groupsMockData from "@/data/groupsMockData";
import { getServerCookie } from "../utils/cookie";
import Filter from "@/components/Filter";

export default function Home() {
  const router = useRouter();
  const path = router.pathname;
  const [isFilterOpen, setIsFilterOpen] = useState(false);
  const [activeLocations, setActiveLocations] = useState([]);
  const [activeCategories, setActiveCategories] = useState([]);
  // const [activeTags, setActiveTags] = useState([]);

  return (
    <>
      <Head>
        <title>DaoDin</title>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta httpEquiv="X-UA-Compatible" content="ie=edge" />
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Topbar />
      <main
        className={`${styles.content} min-h-screen pt-8 bg-backgroundColor`}
      >
        <div className="w-[90%] max-w-5xl m-auto">
          <div className="h-[100px] bg-secondaryColor rounded-[20px] mb-6 flex items-center justify-center ">
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
            <Image src="/pal-1.png" alt="pal" width={120} height={120} />
          </div>
          <div className="mb-6 flex gap-5">
            <button
              type="button"
              onClick={() => setIsFilterOpen(true)}
              className="w-32 bg-primaryColor text-[26px] font-bold text-white rounded-[50px]"
            >
              Filter
            </button>
            <button
              type="button"
              className="w-32 px-6 py-1 bg-primaryColor text-[26px] font-bold text-white rounded-[50px]"
            >
              Sortby
            </button>
          </div>
          {isFilterOpen && (
            <Filter
              setIsFilterOpen={setIsFilterOpen}
              activeLocations={activeLocations}
              setActiveLocations={setActiveLocations}
              activeCategories={activeCategories}
              setActiveCategories={setActiveCategories}
              // activeTags={activeTags}
              // setActiveTags={setActiveTags}
            />
          )}
          <div className=" px-12 pt-2 pb-8 bg-white rounded-[20px]">
            {groupsMockData.map((group) => (
              <Group
                path={path}
                key={group.group_id}
                groupId={group.group_id}
                name={group.name}
                category={group.category}
                location={group.location}
                description={group.description}
                status={group.status}
                picture={group.picture}
                area={group.area}
              />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const token = getServerCookie("userInfo", "token", context.req);
  const userId = getServerCookie("userInfo", "user_id", context.req);
  const name = getServerCookie("userInfo", "name", context.req);

  if (!token) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: { token, userId, name },
  };
}
