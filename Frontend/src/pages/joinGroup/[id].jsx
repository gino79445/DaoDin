import Head from "next/head";
import { useState, useEffect, useRef } from "react";
import axios from "axios";

import Topbar from "@/components/Topbar";

import styles from "../../styles/font.module.scss";
import { getServerCookie } from "../../utils/cookie";

const apiUrl = process.env.API_URL;

export default function JoinGroupPage({ token, groupId }) {
  const [group, setGroup] = useState({});
  const nicknameRef = useRef("");
  const introRef = useRef("");
  const msgRef = useRef("");

  const config = {
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  };

  const getGroup = async () => {
    await axios
      .get(`${apiUrl}/group/${groupId}`, config)
      .then((res) => {
        setGroup(res.data);
      })
      .catch((err) => {
        console.log(err);
      });
  };
  const joinGroup = async () => {
    const payload = {
      self_intro: introRef.current.value,
      match_msg: msgRef.current.value,
      nickname: nicknameRef.current.value,
    };
    console.log(payload);
    await axios
      .post(`${apiUrl}/group/${groupId}/join`, payload, config)
      .then((res) => {
        console.log(res);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  useEffect(() => {
    getGroup();
  });

  return (
    <>
      <Head>
        <title>Join Group {groupId} Page</title>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta httpEquiv="X-UA-Compatible" content="ie=edge" />
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Topbar />
      <main
        className={`${styles.content} min-h-screen bg-backgroundColor p-14`}
      >
        <div className="w-[90%] max-w-6xl bg-white m-auto mb-10 px-16 py-10 rounded-[20px] flex ">
          <div className="w-full">
            <h3 className="mb-10 text-center text-3xl font-bold">
              {group.name || "Mystery Group"}
            </h3>
            <form className="px-2.5 mb-6 flex flex-col justify-between gap-7">
              <label
                htmlFor="nickname"
                className="text-3xl font-bold flex flex-col"
              >
                Nickname
                <input
                  type="text"
                  id="nickname"
                  name="nickname"
                  className="mt-2 p-2.5 text-lg font-normal border border-solid border-primaryColor rounded-[20px]"
                  ref={nicknameRef}
                />
              </label>
              <label
                htmlFor="intro"
                className="text-3xl font-bold flex flex-col"
              >
                Tell me about yourself
                <textarea
                  id="intro"
                  name="intro"
                  rows="6"
                  className="mt-2 p-2.5 text-lg font-normal border border-solid border-primaryColor rounded-[20px]"
                  ref={introRef}
                />
              </label>
              <label
                htmlFor="tendency"
                className="text-3xl font-bold flex flex-col"
              >
                What kind of people would you like to meet
                <textarea
                  id="tendency"
                  name="tendency"
                  rows="6"
                  className="mt-2 p-2.5 text-lg font-normal border border-solid border-primaryColor rounded-[20px]"
                  ref={msgRef}
                />
              </label>
              <div className="self-end flex gap-2">
                <button
                  type="button"
                  className="w-28 px-6 py-2 text-center text-lg font-semibold text-white bg-[#BFBFBF] rounded-[50px]"
                >
                  Cancel
                </button>
                <button
                  type="button"
                  className="w-28 px-6 py-2 text-center text-lg font-semibold text-white bg-primaryColor rounded-[50px]"
                  onClick={joinGroup}
                >
                  Join
                </button>
              </div>
            </form>
          </div>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const token = getServerCookie("userInfo", "token", context.req);
  const groupId = Number(context.params.id);

  if (!token) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: { token, groupId },
  };
}
