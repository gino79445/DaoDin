name: CI/CD Pipeline for DaoDin

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
        BACKEND_ENV: ${{secrets.BACKEND_ENV}}   
    steps:
    - name: Check commit description
      id: check_commit
      run: |
        COMMIT_DESC="$(git log -1 --pretty=%B)"
        if [[ "$COMMIT_DESC" == *"--noRebuild"* ]]; then
          echo "Commit description contains --noRebuild"
          echo "skip=1" >> $GITHUB_OUTPUT
        else
          echo "Commit description does not contain --noRebuild"
          echo "skip=0" >> $GITHUB_OUTPUT
        fi
    
    - name: ssh init
      if: steps.check_commit.outputs.skip == '0'
      run: |
        ssh -o StrictHostKeyChecking=no -i ./CICD/ssh_key.pem ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < echo ${{secrets.SSH_GITHUB_PRIV}} > ./ssh_key.pem && 
        ssh-add ./ssh_key.pem
      
    - name: clone git repo
      if: steps.check_commit.outputs.skip == '0'
      run: |
        ssh -o StrictHostKeyChecking=no -i ./CICD/ssh_key.pem ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < git clone git@github.com:quevenliu/DaoDin.git
    
    - name: write secrets
      if: steps.check_commit.outputs.skip == '0'
      run: |
        ssh -o StrictHostKeyChecking=no -i ./CICD/ssh_key.pem ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < echo ${{secrets.BACKEND_ENV}} > ./DaoDin/Backend/.env

    - name: Write SSH Key to file
      if: steps.check_commit.outputs.skip == '0'
      run: |
        echo "${{secrets.SSH_KEY}}" > ./CICD/ssh_key.pem
        chmod 600 ./CICD/ssh_key.pem  
    
    - name: Connect to EC2 instance using SSH and setup docker
      if: steps.check_commit.outputs.skip == '0'
      run: |
        ssh -o StrictHostKeyChecking=no -i ./CICD/ssh_key.pem ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} 'bash -s' < ./CICD/setup_docker.sh
      